<!-- Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license.
See LICENSE in the project root for license information. -->

<local:NavigationAwarePage
    x:Class="MeetingManager.Views.EditPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MeetingManager.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:prism="using:Prism.Windows.Mvvm"
    prism:ViewModelLocator.AutoWireViewModel="True"    
    Style="{StaticResource Page}"
    mc:Ignorable="d"
    x:Name="ThisPage"
    d:DesignHeight="900"
    d:DesignWidth="900">
<!--
    <local:NavigationAwarePage.TopAppBar>
        <local:TopBarControl/>
    </local:NavigationAwarePage.TopAppBar>
-->
    <Grid Background="White" Style="{StaticResource MainGrid}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid.Resources>
            <DataTemplate x:Key="AttendeeTemplate">
                <Grid>
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="RightTapped">
                            <local:OpenMenuFlyoutAction/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="Delete" IsEnabled="{Binding IsOrganizer, Converter={StaticResource Negation}}" Command="{Binding DataContext.DeleteAttendeeCommand, ElementName=ThisPage}" CommandParameter="{Binding}"/>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>

                    <TextBlock Grid.Column="0" Text="{Binding Path=EmailAddress}" TextWrapping="Wrap"/>
                    <TextBlock Grid.Column="1" Text="{Binding Path=ResponseStatus}"/>
                </Grid>
            </DataTemplate>
        </Grid.Resources>

        <TextBlock Text="{Binding Title}" Grid.ColumnSpan="2" Style="{StaticResource PageTitle}"/>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource CmdBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ProgressBar IsIndeterminate="True"
                Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisible}}"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Content="Email" Style="{StaticResource TopButton}" Visibility="{Binding IsNewMeeting, Converter={StaticResource BoolToCollapsed}}">
                <Button.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Reply All" Command="{Binding ReplyAllCommand}"/>
                        <MenuFlyoutItem Text="Forward" Command="{Binding ForwardCommand}"/>
                    </MenuFlyout>
                </Button.Flyout>
                </Button>
                <Button Content="Recurrence" Style="{StaticResource TopButton}" Command="{Binding RecurrenceCommand}"/>
                <Button Content="Time Slots" Style="{StaticResource TopButton}" Command="{Binding GetSuggestedTimeCommand}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"/>
                <Button Content="ASAP" Style="{StaticResource TopButton}" Command="{Binding ASAPCommand}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"/>
                <Button Content="I'm running late" Style="{StaticResource TopButton}" Command="{Binding LateCommand}"  Visibility="{Binding IsNewMeeting, Converter={StaticResource BoolToCollapsed}}"/>
                <Button Content="{Binding SaveCaption}" Style="{StaticResource TopButton}" Command="{Binding SaveCommand}"/>
            </StackPanel>
        </Grid>

        <StackPanel Margin="0,0,0,0" Grid.Row="2">

            <TextBlock Text="Details" Style="{StaticResource SubTitle}" Margin="0,0,-0.333,10"/>

            <TextBox Text="{Binding Meeting.Subject, Mode=TwoWay}"
                                PlaceholderText="Subject" FontSize="24"                             
                                />
            
            <Grid Margin="0,25,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding LocationName, Mode=TwoWay}" HorizontalAlignment="Stretch" PlaceholderText="Location"/>
                <Button Content="Find Room" Style="{StaticResource CommandButton}" Command="{Binding FindRoomCommand}"
                         Grid.Column="1" Margin="5,0,0,0"/>
            </Grid>

            <Grid Margin="0,25,0,0" Visibility="{Binding IsSerial, Converter={StaticResource BoolToCollapsed}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <local:CalendarDatePicker SelectedDate="{Binding StartDate, Mode=TwoWay}"
                    DateFormat = "{} Start: {dayofweek.full}‎, ‎{month.full}‎ ‎{day.integer}‎, ‎{year.full}"
                    Margin="0,0,0,0" HorizontalAlignment="Stretch"
                    />
                <TimePicker Time="{Binding StartTime, Mode=TwoWay}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"
                            Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="10,0,0,0"/>

                <CheckBox Content="All Day" IsChecked="{Binding IsAllDay, Mode=TwoWay}"
                            Grid.Column="2" VerticalAlignment="Bottom" Margin="10,0,0,0"/>

                <local:CalendarDatePicker SelectedDate="{Binding EndDate, Mode=TwoWay}" 
                    DateFormat = "{} End: {dayofweek.full}‎, ‎{month.full}‎ ‎{day.integer}‎, ‎{year.full}"
                    Grid.Row="1" Margin="0,25,0,0" HorizontalAlignment="Stretch"
                    />
                    
                <TimePicker Time="{Binding EndTime, Mode=TwoWay}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"
                        Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="10,0,0,0"/>
            </Grid>

             <Grid Margin="0,25,0,0" Visibility="{Binding IsSerial, Converter={StaticResource BoolToVisible}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                 </Grid.ColumnDefinitions>
                
                <TimePicker Time="{Binding StartTime, Mode=TwoWay}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"
                            Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                <TimePicker Time="{Binding EndTime, Mode=TwoWay}" IsEnabled="{Binding IsAllDay, Converter={StaticResource Negation}}"
                            Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="10,0,0,0"/>
                <CheckBox Content="All Day" IsChecked="{Binding IsAllDay, Mode=TwoWay}"
                                Grid.Column="2" VerticalAlignment="Bottom" Margin="10,0,0,0"/>
            </Grid>

             <TextBlock Text="{Binding RecurrenceDate}" TextWrapping="Wrap" Margin="0,25,0,0"
                    Visibility="{Binding IsSerial, Converter={StaticResource BoolToVisible}}"/>
                    
        </StackPanel>

        <Grid Grid.Row="3" Margin="0,25,0,0">

            <Border Visibility="{Binding IsContentText, Converter={StaticResource BoolToVisible}}">
                <TextBox Text="{Binding Description, Mode=TwoWay}"
                            TextWrapping="NoWrap" AcceptsReturn="True"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            PlaceholderText="Description"/>
            </Border>
            <Border Style="{StaticResource StaticText}" Visibility="{Binding IsContentText, Converter={StaticResource BoolToCollapsed}}"
                    BorderBrush="Gray" BorderThickness="2"
                    >
                <WebView local:AttachedProperties.Html="{Binding Meeting.Body.Content}"
                         DefaultBackgroundColor="AntiqueWhite"
                         />
            </Border>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="2" Style="{StaticResource PeopleColumn}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock Text="People" Style="{StaticResource SubTitle}"/>
            
            <Button Grid.Row="1" Content="+Attendee" HorizontalAlignment="Stretch" Margin="0,0,0,1">
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="Add User" Command="{Binding AddUserCommand}"/>
                            <MenuFlyoutItem Text="Add Contact" Command="{Binding AddContactCommand}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
<!--
                     <Border BorderBrush="Gray" BorderThickness="2">
-->
                            <ListView Grid.Row="2" Background="Beige"
                                ItemTemplate="{StaticResource AttendeeTemplate}"
                                ItemsSource="{Binding Attendees}"
                             >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
<!--
                        </Border>
-->
              </Grid>

        <Border Style="{StaticResource LogWindow}" 
                Grid.Row="4" Grid.ColumnSpan="2">
            <local:LogWindowControl DataContext="{StaticResource LogWindowVM}"/>
        </Border>
    </Grid>
</local:NavigationAwarePage>
